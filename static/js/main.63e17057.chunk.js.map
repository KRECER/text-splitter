{"version":3,"sources":["pages/splitter-page/mear.png","redux/reducer.js","redux/store.js","redux/selectors.js","components/atoms/app-textarea/app-textarea.js","utils/styled-mixins.js","components/atoms/app-button/app-button.js","components/molecules/layout-form/layout-form.js","pages/home-page/home-page.js","pages/splitter-page/splitter-page.js","components/atoms/protected-route/protected-route.js","components/molecules/app/app.js","index.js"],"names":["module","exports","initialState","fullText","isFilledText","parts","column1","column2","column3","ActionType","ActionCreator","text","type","payload","numCol","count","words","split","len","Math","round","length","obj","slice","join","store","createStore","state","action","applyMiddleware","logger","getFullText","getColumnsText","getIsFilledText","TextField","styled","MUITextField","m","Array","map","num","AppTextArea","props","value","onChange","label","fullWidth","rows","autoFocus","rest","variant","multiline","defaultProps","Button","MUIButton","AppButton","children","Form","form","LayoutForm","handleChangeText","color","component","Link","to","disabled","size","Container","MUIContainer","HomePage","useSelector","dispatch","useDispatch","maxWidth","e","target","TextArea","Wrap","div","img","Row","MUIGrid","Item","SplitterPage","useState","isOpenSnackBar","setIsOpenSnackBar","countColumns","setCountColumns","selectedCol","setSelectedCol","columnTexts","columnRefs","useMemo","React","createRef","activeColumnRef","setActiveColumnRef","ref","callback","handleClick","current","contains","useEffect","document","addEventListener","removeEventListener","useOutsideClick","Object","keys","reduce","acc","val","trim","handleChangeColumnText","renderBtn","key","item","startIcon","onClick","renderColumn","textArea","xs","md","handleClickColumn","container","spacing","it","idx","anchorOrigin","vertical","horizontal","open","message","ProtectedRoute","Component","location","useLocation","pathname","from","App","className","path","exact","ReactDOM","render","CssBaseline","querySelector"],"mappings":"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","file":"static/js/main.63e17057.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mear.791f52be.png\";","const initialState = {\n  fullText: '',\n  isFilledText: false,\n  parts: {\n    column1: '',\n    column2: '',\n    column3: '',\n  },\n};\n\nconst ActionType = {\n  CHANGE_FULL_TEXT: 'CHANGE_FULL_TEXT',\n  CHANGE_COLUMN_TEXT: 'CHANGE_COLUMN_TEXT',\n  SPLIT_TEXT: 'SPLIT_TEXT',\n};\n\nconst ActionCreator = {\n  changeFullText: (text) => ({\n    type: ActionType.CHANGE_FULL_TEXT,\n    payload: text,\n  }),\n\n  changeColumnText: (numCol, text) => {\n    return { type: ActionType.CHANGE_COLUMN_TEXT, payload: { numCol, text } };\n  },\n\n  splitText: (count, text) => {\n    const words = text.split(' ');\n    const len = Math.round(words.length / count);\n    const obj = {};\n\n    switch (count) {\n      case 1:\n        obj.column1 = text;\n        break;\n      case 2:\n        obj.column1 = words.slice(0, len).join(' ');\n        obj.column2 = words.slice(len).join(' ');\n        break;\n      case 3:\n        obj.column1 = words.slice(0, len).join(' ');\n        obj.column2 = words.slice(len, len + len).join(' ');\n        obj.column3 = words.slice(len + len).join(' ');\n        break;\n    }\n\n    return { type: ActionType.SPLIT_TEXT, payload: obj };\n  },\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionType.CHANGE_FULL_TEXT:\n      return {\n        ...state,\n        fullText: action.payload,\n        isFilledText: true,\n        parts: { ...state.parts, column1: action.payload },\n      };\n\n    case ActionType.CHANGE_COLUMN_TEXT:\n      return {\n        ...state,\n        parts: {\n          ...state.parts,\n          [`column${action.payload.numCol}`]: action.payload.text,\n        },\n      };\n\n    case ActionType.SPLIT_TEXT:\n      return { ...state, parts: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport { ActionCreator, reducer };\n","import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport { reducer } from './reducer';\n\nconst store = createStore(reducer, applyMiddleware(logger));\n\nexport default store;\n","const getFullText = (state) => state.fullText;\nconst getColumnsText = (state) => state.parts;\nconst getIsFilledText = (state) => state.isFilledText;\n\nexport { getColumnsText, getFullText, getIsFilledText };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport MUITextField from '@material-ui/core/TextField';\n\nimport { marginMixin } from '../../../utils/styled-mixins';\n\nconst TextField = styled(MUITextField)`\n  .MuiInputBase-inputMultiline::-webkit-scrollbar {\n    width: 2px;\n    height: 2px;\n  }\n\n  .MuiInputBase-inputMultiline::-webkit-scrollbar-thumb {\n    background: #333;\n  }\n\n  .MuiInputBase-inputMultiline::-webkit-scrollbar-track {\n    background: #fff;\n  }\n\n  ${marginMixin};\n`;\n\nconst AppTextArea = (props) => {\n  const { value, onChange, label, fullWidth, rows, autoFocus, ...rest } = props;\n\n  return (\n    <TextField\n      variant=\"outlined\"\n      multiline\n      label={label}\n      value={value}\n      onChange={onChange}\n      rows={rows}\n      fullWidth={fullWidth}\n      autoFocus={autoFocus}\n      {...rest}\n    />\n  );\n};\n\nAppTextArea.propTypes = {\n  label: PropTypes.string,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  fullWidth: PropTypes.bool,\n  rows: PropTypes.number,\n  autoFocus: PropTypes.bool,\n};\n\nAppTextArea.defaultProps = {\n  label: '',\n  fullWidth: false,\n  rows: 1,\n  autoFocus: false,\n};\n\nexport default AppTextArea;\n","export const marginMixin = ({ m }) =>\n  m && (m instanceof Array ? `margin: ${m.map((num) => `${num}px`).join(' ')} !important ;` : `margin: ${m}px;`);\n","import React from 'react';\nimport styled from 'styled-components';\nimport MUIButton from '@material-ui/core/Button';\n\nconst Button = styled(MUIButton)`\n  border-radius: 0;\n`;\n\nconst AppButton = (props) => <Button {...props}>{props.children}</Button>;\n\nexport default AppButton;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport AppTextArea from '../../atoms/app-textarea';\nimport AppButton from '../../atoms/app-button';\n\nconst Form = styled.form`\n  width: 100%;\n  text-align: center;\n`;\n\nconst LayoutForm = (props) => {\n  const { text, handleChangeText } = props;\n\n  return (\n    <Form>\n      <AppTextArea\n        value={text}\n        onChange={handleChangeText}\n        rows={15}\n        label={'Type here text...'}\n        m={[0, 0, 20, 0]}\n        fullWidth\n      />\n      <AppButton variant=\"contained\" color=\"primary\" component={Link} to={'/splitter'} disabled={!text} size={'large'}>\n        Layout\n      </AppButton>\n    </Form>\n  );\n};\n\nLayoutForm.propTypes = {\n  text: PropTypes.string.isRequired,\n  handleChangeText: PropTypes.func.isRequired,\n};\n\nexport default LayoutForm;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport MUIContainer from '@material-ui/core/Container';\n\nimport { ActionCreator } from '../../redux/reducer';\nimport { getFullText } from '../../redux/selectors';\nimport LayoutForm from '../../components/molecules/layout-form';\n\nconst Container = styled(MUIContainer)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  min-height: 100vh;\n`;\n\nconst HomePage = () => {\n  const fullText = useSelector(getFullText);\n  const dispatch = useDispatch();\n\n  const handleChangeTextArea = (e) => {\n    dispatch(ActionCreator.changeFullText(e.target.value));\n  };\n\n  return (\n    <Container maxWidth={'md'}>\n      <LayoutForm text={fullText} handleChangeText={handleChangeTextArea} />\n    </Container>\n  );\n};\n\nexport default HomePage;\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\n\nimport MUIGrid from '@material-ui/core/Grid';\nimport MUIContainer from '@material-ui/core/Container';\nimport MUISnackbar from '@material-ui/core/Snackbar';\nimport BorderClearIcon from '@material-ui/icons/BorderClear';\n\nimport img from './mear.png';\nimport { getColumnsText, getFullText } from '../../redux/selectors';\nimport { ActionCreator } from '../../redux/reducer';\nimport AppButton from '../../components/atoms/app-button';\nimport AppTextArea from '../../components/atoms/app-textarea';\n\nconst useOutsideClick = (ref, callback) => {\n  const handleClick = (e) => {\n    if (ref.current && !ref.current.contains(e.target)) {\n      callback();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('click', handleClick);\n\n    return () => {\n      document.removeEventListener('click', handleClick);\n    };\n  });\n};\n\nconst TextArea = styled(AppTextArea)`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  height: 100%;\n  background: #fff;\n\n  .MuiInputBase-root {\n    height: 100%;\n  }\n\n  .MuiInputBase-input {\n    height: 100%;\n  }\n`;\n\nconst Wrap = styled.div`\n  height: 100vh;\n  padding: 100px 0;\n  background: url(${img}) no-repeat center;\n  background-size: cover;\n`;\n\nconst Row = styled(MUIGrid)`\n  margin: 0 -4px;\n  margin-bottom: 25px;\n`;\n\nconst Item = styled.div`\n  position: relative;\n  height: 100%;\n  padding: 15px;\n  background-color: rgba(255, 255, 255, 0.9);\n  box-shadow: 1px 1px 30px rgba(0, 0, 0, 0.5);\n`;\n\nconst SplitterPage = () => {\n  const [isOpenSnackBar, setIsOpenSnackBar] = useState(false);\n  const [countColumns, setCountColumns] = useState(1);\n  const [selectedCol, setSelectedCol] = useState(null);\n  const dispatch = useDispatch();\n  const fullText = useSelector(getFullText);\n  const columnTexts = useSelector(getColumnsText);\n  const columnRefs = useMemo(() => [...Array(3)].map(() => React.createRef()), []);\n  const [activeColumnRef, setActiveColumnRef] = useState(columnRefs[0]);\n\n  useOutsideClick(activeColumnRef, () => {\n    setIsOpenSnackBar(false);\n    if (selectedCol) {\n      const text = Object.keys(columnTexts).reduce((acc, val) => {\n        return acc.trim() + ' ' + columnTexts[val];\n      }, '');\n      dispatch(ActionCreator.changeFullText(text));\n      dispatch(ActionCreator.splitText(countColumns, text));\n      setSelectedCol(null);\n    }\n  });\n\n  const handleClickColumn = (num) => {\n    setActiveColumnRef(columnRefs[num - 1]);\n    setSelectedCol(num);\n    setIsOpenSnackBar(true);\n  };\n\n  const handleChangeCountCol = (count) => {\n    setCountColumns(count);\n    dispatch(ActionCreator.splitText(count, fullText));\n  };\n\n  const handleChangeColumnText = (e) => {\n    dispatch(ActionCreator.changeColumnText(selectedCol, e.target.value));\n  };\n\n  const renderBtn = (num) => {\n    return (\n      <MUIGrid key={num} item>\n        <AppButton\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<BorderClearIcon />}\n          onClick={() => handleChangeCountCol(num)}\n          disabled={!!selectedCol}\n        >\n          {num}\n        </AppButton>\n      </MUIGrid>\n    );\n  };\n\n  const renderColumn = (num) => {\n    const textArea = (\n      <TextArea onChange={handleChangeColumnText} value={columnTexts[`column${selectedCol}`]} fullWidth autoFocus />\n    );\n\n    return (\n      <MUIGrid item xs={12} md={4} key={num} ref={columnRefs[num - 1]}>\n        <Item onClick={() => handleClickColumn(num)}>\n          {columnTexts[`column${num}`]}\n          {selectedCol === num && textArea}\n        </Item>\n      </MUIGrid>\n    );\n  };\n\n  return (\n    <Wrap>\n      <MUIContainer maxWidth={'lg'}>\n        <Row container spacing={1}>\n          {[...Array(countColumns)].map((it, idx) => renderColumn(++idx))}\n        </Row>\n        <MUIGrid container spacing={1}>\n          {[...Array(3)].map((it, idx) => renderBtn(++idx))}\n        </MUIGrid>\n      </MUIContainer>\n      <MUISnackbar\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n        open={isOpenSnackBar}\n        message=\"To save, click outside the column\"\n      />\n    </Wrap>\n  );\n};\n\nexport default SplitterPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { Route, Redirect, useLocation } from 'react-router-dom';\n\nimport { getIsFilledText } from '../../../redux/selectors';\n\nconst ProtectedRoute = (props) => {\n  const { component: Component, ...rest } = props;\n  const isFilledText = useSelector(getIsFilledText);\n  const location = useLocation();\n\n  return (\n    <Route {...rest}>\n      {isFilledText ? <Component /> : <Redirect to={{ pathname: '/', state: { from: location.pathname } }} />}\n    </Route>\n  );\n};\n\nProtectedRoute.propTypes = {\n  component: PropTypes.func.isRequired,\n};\n\nexport default ProtectedRoute;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport HomePage from '../../../pages/home-page';\nimport SplitterPage from '../../../pages/splitter-page';\nimport ProtectedRoute from '../../atoms/protected-route';\n\nconst App = () => (\n  <div className={'app'}>\n    <Route path={'/text-splitter/'} component={HomePage} exact />\n    <ProtectedRoute path={'/text-splitter/layout'} component={SplitterPage} />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport store from './redux/store';\nimport App from './components/molecules/app';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <CssBaseline />\n      <App />\n    </Router>\n  </Provider>,\n  document.querySelector('.main')\n);\n"],"sourceRoot":""}